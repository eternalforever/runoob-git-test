迭代器
 class SkipItertor:
    def __init__(self,wrapped):
        self.wrapped=wrapped
        self.offset=0
    def __next(self):
        if self.offset>=self.wrapped:
            raise StopIteration
        else:
            item=self.wrapped[self.offset]
            self.offset+=2
            return item
   class SkipIbject:
      def __init__(self,wrapped):
          self.wrapped=wrapped
      def __iter__(self):
          return SkipIterator(self.wrapped)
    if __name__="__main__":
        alpha='abcdef'
        skipper=SkipObject(alpha)
        i=iter(skipper)
        print(next(i),next(i),next(i))
        
        for x in skipper:
            for y in skipper:
                print(x+y,end=' ')
